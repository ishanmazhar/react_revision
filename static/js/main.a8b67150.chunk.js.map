{"version":3,"sources":["components/Book.js","assets/books.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Book","props","className","onClick","delete","bookname","writer","type","onChange","inputName","value","books","id","MainComponent","state","bookList","showBooks","changeWithInputState","event","index","book","target","setState","deleteBookState","splice","toggleBooks","this","map","style","border","borderRadius","backgroundColor","color","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAaeA,EAVF,SAAAC,GACT,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAIC,QAASF,EAAMG,OAAnB,mBAAkCH,EAAMI,YACxC,0CAAaJ,EAAMK,UACnB,uBAAOC,KAAK,OAAOC,SAAUP,EAAMQ,UAAWC,MAAOT,EAAMI,e,0CCFxDM,EAND,CACV,CAAEC,GAAI,EAAGP,SAAU,OAAQC,OAAQ,iBACnC,CAAEM,GAAI,EAAGP,SAAU,oBAAqBC,OAAQ,aAChD,CAAEM,GAAI,EAAGP,SAAU,gBAAiBC,OAAQ,iBCuEjCO,E,4MArEXC,MAAQ,CACJH,MAAOI,EACPC,WAAW,G,EAGbC,qBAAuB,SAACC,EAAOC,GAC7B,IAAMC,EAAI,eACL,EAAKN,MAAMH,MAAMQ,IAGtBC,EAAKf,SAAWa,EAAMG,OAAOX,MAC7B,IAAMC,EAAK,YAAO,EAAKG,MAAMH,OAC7BA,EAAMQ,GAASC,EACf,EAAKE,SAAS,CACZX,MAAOA,K,EAIXY,gBAAkB,SAAAJ,GAGhB,IAAMR,EAAK,YAAO,EAAKG,MAAMH,OAC7BA,EAAMa,OAAOL,EAAO,GACpB,EAAKG,SAAS,CACZX,MAAOA,K,EAIXc,YAAc,WACZ,EAAKH,SAAS,CAACN,WAAY,EAAKF,MAAME,a,4CAGxC,WAAU,IAAD,OAQHL,EAAQ,KACTe,KAAKZ,MAAME,YAEZL,EADkBe,KAAKZ,MAAMH,MACXgB,KAAI,SAACP,EAAMD,GAC3B,OACE,cAAC,EAAD,CACMd,SAAUe,EAAKf,SACfC,OAAQc,EAAKd,OACbF,OAAQ,kBAAM,EAAKmB,gBAAgBJ,IAEnCV,UAAW,SAACS,GAAD,OAAW,EAAKD,qBAAqBC,EAAOC,KALlDC,EAAKR,QAUtB,OACE,sBAAKV,UAAU,MAAf,UACE,oBAAI0B,MAxBM,CACZC,OAAQ,gBACRC,aAAc,MACdC,gBAAiB,QACjBC,MAAO,SAoBL,uBACA,wBAAQ7B,QAASuB,KAAKD,YAAtB,0BAIEd,S,GA/DcsB,aCSbC,MAPf,WACE,OACE,cAAC,EAAD,KCIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a8b67150.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../stylesheets/Book.css';\r\n\r\nconst Book = props => {\r\n    return (\r\n        <div className=\"Book\"> \r\n            <h3 onClick={props.delete}>Book: {props.bookname}</h3>\r\n            <h4>Writer: {props.writer}</h4>\r\n            <input type=\"text\" onChange={props.inputName} value={props.bookname}/> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Book;","const books = [\r\n    { id: 1, bookname: \"1984\", writer: \"George Orwell\"},\r\n    { id: 2, bookname: \"The Da Vinci Code\", writer: \"Dan Brown\"},\r\n    { id: 3, bookname: \"The Alchemist\", writer: \"Paulo Coelho\"}\r\n]\r\n\r\nexport default books;","import React, { Component } from 'react'; \r\nimport Book from './Book'; \r\nimport bookList from '../assets/books';\r\n\r\nclass MainComponent extends Component {\r\n    state = {\r\n        books: bookList,\r\n        showBooks: true\r\n      }\r\n    \r\n      changeWithInputState = (event, index) => {\r\n        const book = {\r\n          ...this.state.books[index]\r\n        }\r\n    \r\n        book.bookname = event.target.value;\r\n        const books = [...this.state.books];\r\n        books[index] = book; \r\n        this.setState({\r\n          books: books\r\n        }); \r\n      };\r\n    \r\n      deleteBookState = index => {\r\n        // const books = this.state.books.slice(); //makes a copy of this.state.books array\r\n        // const books = this.state.books.map(item => item); //makes a copy of this.state.books array\r\n        const books = [...this.state.books] //makes a copy of this.state.books array\r\n        books.splice(index, 1); \r\n        this.setState({\r\n          books: books\r\n        });\r\n      };\r\n    \r\n      toggleBooks = () => {\r\n        this.setState({showBooks: !this.state.showBooks });\r\n      }\r\n    \r\n      render() {\r\n        const style = {\r\n          border: \"1px solid red\",\r\n          borderRadius: \"5px\",\r\n          backgroundColor: \"black\",\r\n          color: \"white\"\r\n        };\r\n    \r\n        let books = null;\r\n        if(this.state.showBooks) {\r\n          const bookState = this.state.books;\r\n          books = bookState.map((book, index) => {\r\n            return (\r\n              <Book key={book.id} \r\n                    bookname={book.bookname}\r\n                    writer={book.writer}\r\n                    delete={() => this.deleteBookState(index)}\r\n                    // or delete={this.deleteBookState.bind(this, index)} />\r\n                    inputName={(event) => this.changeWithInputState(event, index)} />\r\n            );\r\n          });\r\n        }\r\n\r\n        return (\r\n          <div className=\"App\">\r\n            <h1 style={style}>Book List</h1>\r\n            <button onClick={this.toggleBooks}>Toggle Books</button>\r\n            {/*this.changeBookState() triggers function when page loaded  / without any event\r\n            //this.changeBookState triggers with event (MUST BE USED)*/}\r\n            {/* <SlideShow /> */}\r\n            { books } \r\n          </div>\r\n        );\r\n      }\r\n\r\n}\r\n\r\nexport default MainComponent;","import React, { Component } from 'react'; \nimport './App.css';\nimport Book from './components/Book';\nimport MainComponent from './components/MainComponent';\n// import SlideShow from './components/SlideShow/Slideshow'; \n\nfunction App() {\n  return(\n    <MainComponent />\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}